grammar Calc
  rule term
    (level ' - ' title:/.+/ [\n]* utterance+ lines) {
      {:level => capture(:level),
       :title => capture(:title),
       :utterances => captures(:utterance).map { |utterance| utterance.value },
       :text => capture(:lines).value,
      }
    }
  end

  rule utterance
    (speaker? ("(" /[A-E][0-9]{4}/ ")" "\n\n")? speaker? hanzi_line pinyin_or_english_lines [\n]) {
      {
        :speaker => (capture(:speaker) ? capture(:speaker).value : nil),
        :hanzi => capture(:hanzi_line).value,
        :pinyin_or_english => capture(:pinyin_or_english_lines).value,
      }
    }
  end

  rule hanzi_line
    /((\p{Han}|！|!|？|,|，|、|。 ?|一|“|”|：|\?|…|\.\.\.|[A-Za-z0-9])+\n)+/
  end

  rule pinyin_or_english_lines
    /((\p{L}|\p{Mn}| |!|\?|,|.|“|”)+\n)+/
  end

  rule speaker
    [A-E]? ":\n\n"
  end

  rule level
    /(Newbie|Elementary|Intermediate|Upper Intermediate|Upper-Intermediate|Advanced)/
  end

  rule lines
    (line [\n]* lines_or_line:(lines | line)) {
      capture(:line).value + capture(:lines_or_line).value
    }
  end

  rule line
    (/.+/) {
      [to_str]
    }
  end
end
